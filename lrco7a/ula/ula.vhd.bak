library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity ula is

	port(
	
		A, B									:	in		unsigned   (3 downto 0);
		Ctrl									:	in		bit_vector (1 downto 0);
		R									   :	out 	unsigned   (7 downto 0);
		DSSa, DSSb, DSSc, DSSd, DSShd :	out	bit_vector (6 downto 0)
		
	);
	
end entity ula;

architecture main of ula is

begin

	process (A, B, Ctrl)
	
		variable Atemp			: unsigned (4 downto 0);
		variable Btemp			: unsigned (4 downto 0);
		variable Temp5b		: unsigned (4 downto 0);
		variable Temp8b		: unsigned (7 downto 0);

		begin 
			
			Temp5b := "00000";
			Temp8b := "00000000";
		
			Atemp(4) := '0';
			Atemp(3 downto 0) := A;
			
			Btemp(4) := '0';
			Btemp(3 downto 0) := B;
			
			if (Ctrl = "00") then
				Temp5b := Atemp + Btemp;
				Temp8b(4 downto 0) := Temp5b;
			elsif (Ctrl = "01") then
				Temp5b := Atemp - Btemp;
				Temp8b(4 downto 0) := Temp5b;
			elsif (Ctrl = "10") then
				Temp8b := A * B;
			elsif (Ctrl = "11") then
				Temp8b(3 downto 0) := A / B;
				Temp8b(7 downto 4) := A rem B;
			end if;
			
			R <= Temp8b;
			
			case Temp8b(0) is
			
				when '0' => DSSa <= "1000000"; --'0'
				when '1' => DSSa <= "1111001"; --'1'
				
			end case;
			
			case Temp8b(1) is
			
				when '0' => DSSb <= "1000000"; --'0'
				when '1' => DSSb <= "1111001"; --'1'
				
			end case;
			
			case Temp8b(2) is
			
				when '0' => DSSc <= "1000000"; --'0'
				when '1' => DSSc <= "1111001"; --'1'
				
			end case;
			
			case Temp8b(3) is
			
				when '0' => DSSd <= "1000000"; --'0'
				when '1' => DSSd <= "1111001"; --'1'
				
			end case;
			
			case Temp8b(3 downto 0) is
				
				when "0000" => DSShd <= "1000000"; --'0'
				when "0001" => DSShd <= "1111001"; --'1'
				when "0010" => DSShd <= "0100100"; --'2'
				when "0011" => DSShd <= "0110000"; --'3'
				when "0100" => DSShd <= "0011001"; --'4'
				when "0101" => DSShd <= "0010010"; --'5'
				when "0110" => DSShd <= "0000010"; --'6'
				when "0111" => DSShd <= "1111000"; --'7'
				when "1000" => DSShd <= "0000000"; --'8'
				when "1001" => DSShd <= "0010000"; --'9'
				when "1010" => DSShd <= "0001000"; --'A'
				when "1011" => DSShd <= "0000011"; --'B'
				when "1100" => DSShd <= "1000110"; --'C'
				when "1101" => DSShd <= "0100001"; --'D'
				when "1110" => DSShd <= "0000110"; --'E'
				when "1111" => DSShd <= "0001110"; --'F'
				when others => DSShd <= "1111111";
					
			end case;
				
	end process;
		
end architecture main;

--------------------------------------------------------------------

--library ieee;
--use ieee.std_logic_1164.all;
--
--entity ula is
--
--	port(
--	
--		A, B			:	in		bit_vector (3 downto 0);
--		R				:	out 	bit_vector (1 downto 0);
--		DSSa, DSSb 	:	out	bit_vector (6 downto 0)
--		
--	);
--	
--end entity ula;
--
--architecture main of ula is
--
--	begin
--	
--		process (A, B)
--		
--			variable Temp : bit_vector (1 downto 0);
--			
--			begin 
--				
--				if (A > B) then
--					Temp := "10";
--				elsif (A < B) then
--					Temp := "01";
--				elsif (A = B) then
--					Temp := "11";
--				else
--					Temp := "00";
--				end if;
--					
--				R <= Temp;
--				
--				case Temp(0) is
--				
--					when '0' => DSSa <= "1000000"; --'0'
--					when '1' => DSSa <= "1111001"; --'1'
--					
--				end case;
--				
--				case Temp(1) is
--				
--					when '0' => DSSb <= "1000000"; --'0'
--					when '1' => DSSb <= "1111001"; --'1'
--					
--				end case;
--					
--		end process;
--		
--end architecture main;